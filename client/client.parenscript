(@@ ($ document)
    (ready (func ()
             (defvar console-div ($ "#console"))

             (defn (strip str)
               (@@ str (replace (regex "/^\\s+/") "")
                       (replace (regex "/\\s+$/") "")))

             (defun handle-response (code report)
               (let ((fail (create))
                     (func-dec-re (regex "^[\\s]*function[\\s]*[\\w]+")))
                 (w/slots (__tryps_return __tryps_err) window
                   (set! __tryps_return fail)
                   (@@ $ (global-eval
                          (if (@@ func-dec-re (test code))
                              (+ code "; window.__tryps_return = undefined;")
                              (+ "window.__tryps_return = " code))))
                   (if (!== __tryps_return fail)
                       (report (+ code #\Newline __tryps_return))
                       (progn
                         (@@ $ (global-eval (+ "try { "
                                               code
                                               " window.__tryps_return = 1;
                                               } catch (e) { window.__tryps_err = e; }")))
                         (if (!== __tryps_return fail)
                             (report (+ code #\Newline undefined))
                             (report (+ "error:" (if __tryps_err
                                                    (+ #\Newline (@ __tryps_err message))
                                                    (+ #\Newline code))))))))))

             (defvar controller
               (@@ console-div
                   (console
                    (create "promptLabel" "ParenScript> "
                            ;; TODO: Check number of parens
                            "commandValidate" (func (line)
                                                (!== (strip line) ""))
                            "commandHandle" (lambda (line report)
                                              (@@ $ (get-j-s-o-n
                                                     "/ps"
                                                     (create :code line)
                                                     (lambda (data)
                                                       (var ret null)
                                                       (if (or (! data)
                                                               (@ data error))
                                                           (report (+ "error" (if (@ data error)
                                                                                  (@ data error)
                                                                                  "")))
                                                           (handle-response (@ data code) report))))))
                            "autofocus" true
                            "promptHistory" true
                            "historyPreserveColumn" true
                            "welcomeMessage" "Enter ParenScript. May you live in interesting times.")))))))